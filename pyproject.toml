# I followed this tutorial
# https://packaging.python.org/en/latest/tutorials/packaging-projects/
# for creating the package.

[project]
name = "emb_spy"
description = "Debugging framework for embedded systems."
readme = "README.md"
dynamic = [
	"version",
]
authors = [
	{name="ppbrs", email="prishchepenko.boris@gmail.com"},
]
requires-python = ">=3.10"
dependencies = [
	"pyelftools >= 0.31"
]

# For a complete list of classifiers, see https://pypi.org/classifiers/.
classifiers = [
	"Programming Language :: Python :: 3",
	"License :: OSI Approved :: MIT License",
	"Operating System :: OS Independent",
]

[build-system]
requires = ["hatchling>=1.18.0"]
build-backend = "hatchling.build"

[tool.hatch.version]
path = "emb_spy/__about__.py"

[project.urls]
"Homepage" = "https://github.com/ppbrs/emb-spy"
"Bug Tracker" = "https://github.com/ppbrs/emb-spy/issues"

# ==================================================================================================
# pytest configuration
# ==================================================================================================
[tool.pytest.ini_options]
# Having pytest look for all files instead of "test_*.py" only:
python_files = "*.py"

# Logging level for failed tests:
log_level = "DEBUG"
log_date_format = "%H:%M:%S"
log_format = "%(asctime)s.%(msecs)03d %(levelname)s %(funcName)s: %(message)s"

# Logging level for real-time output:
log_cli = "True"
log_cli_level = "INFO"

# ==================================================================================================
# Ruff
# ==================================================================================================
[tool.ruff]
line-length = 100

[tool.ruff.format]
# https://docs.astral.sh/ruff/formatter/

# Use double quotes for strings.
quote-style = "double"
# Indent with spaces, rather than tabs.
indent-style = "space"

# ==================================================================================================
# isort
# ==================================================================================================
[tool.isort]
# See all isort options: https://pycqa.github.io/isort/docs/configuration/options.html
line_length = 100
wrap_length = 100

# Personally, I find this option the best. It allows faster debugging and leaving comments
# for a particular import.
force_single_line = "True"
